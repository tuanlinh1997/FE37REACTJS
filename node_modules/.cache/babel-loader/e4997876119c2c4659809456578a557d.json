{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\New folder (3)\\\\src\\\\pages\\\\home\\\\ListMovie.js\";\nimport React, { Component } from \"react\";\nimport Movie from \"./../../components/Movie\";\nimport { connect } from \"react-redux\";\nimport * as action from \"./../../redux/action\";\n\nclass ListMovie extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderHTML = () => {\n      return this.props.listMovie.map(item => {\n        return /*#__PURE__*/React.createElement(Movie, {\n          key: item.maPhim,\n          movie: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getListMovie();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"ListMovie\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, this.renderHTML()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listMovie: state.movieReducer.listMovie\n  };\n};\n\nconst mapDistpatchToProps = dispatch => {\n  return {\n    getListMovie: () => {\n      dispatch(action.actGetListMovieAPI());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDistpatchToProps)(ListMovie);","map":{"version":3,"sources":["C:/Users/Dell/Desktop/New folder (3)/src/pages/home/ListMovie.js"],"names":["React","Component","Movie","connect","action","ListMovie","renderHTML","props","listMovie","map","item","maPhim","componentDidMount","getListMovie","render","mapStateToProps","state","movieReducer","mapDistpatchToProps","dispatch","actGetListMovieAPI"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAKhCK,UALgC,GAKnB,MAAM;AACjB,aAAO,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyBC,IAAI,IAAI;AACtC,4BAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,IAAI,CAACC,MAAjB;AAAyB,UAAA,KAAK,EAAED,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAT+B;AAAA;;AAChCE,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,KAAL,CAAWM,YAAX;AACD;;AAQDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKR,UAAL,EAAtB,CAFF,CADF;AAMD;;AAlB+B;;AAqBlC,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,SAAS,EAAEQ,KAAK,CAACC,YAAN,CAAmBT;AADzB,GAAP;AAGD,CAJD;;AAMA,MAAMU,mBAAmB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACLN,IAAAA,YAAY,EAAE,MAAM;AAClBM,MAAAA,QAAQ,CAACf,MAAM,CAACgB,kBAAP,EAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAejB,OAAO,CAACY,eAAD,EAAkBG,mBAAlB,CAAP,CAA8Cb,SAA9C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Movie from \"./../../components/Movie\";\nimport { connect } from \"react-redux\";\nimport * as action from \"./../../redux/action\";\n\nclass ListMovie extends Component {\n  componentDidMount() {\n    this.props.getListMovie();\n  }\n\n  renderHTML = () => {\n    return this.props.listMovie.map(item => {\n      return <Movie key={item.maPhim} movie={item} />;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h3>ListMovie</h3>\n        <div className=\"row\">{this.renderHTML()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    listMovie: state.movieReducer.listMovie\n  };\n};\n\nconst mapDistpatchToProps = dispatch => {\n  return {\n    getListMovie: () => {\n      dispatch(action.actGetListMovieAPI());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDistpatchToProps)(ListMovie);\n"]},"metadata":{},"sourceType":"module"}